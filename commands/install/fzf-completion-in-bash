#! /bin/bash

# https://github.com/lincheney/fzf-tab-completion

echo "Install fzf completion in bash:"

# Check if .bashrc exists
if [[ ! -f ~/.bashrc ]]; then
  echo "No .bashrc file found"
  return
fi

# If is it MacOS
if [[ "$OSTYPE" == "darwin"* ]]; then
  # Check if Homebrew is installed
  if [[ ! -x "$(command -v brew)" ]]; then
    echo "Homebrew is not installed"
    echo "Please install Homebrew first"
    return
  fi

  # Install bash-completion if not exists
  if [[ -z "$(brew list --formula | grep bash-completion)" ]]; then
    echo "  · install bash-completion"
    brew install bash-completion@2
    echo "    ok"
  else
    echo "  · bash-completion is already installed"
  fi 

  # Check the bash-complete version - it should be bash-completion@2
  if [[ "$(brew list --formula | grep bash-completion)" != "bash-completion@2" ]]; then
    echo "Your bash-completion version is not bash-completion@2"
    echo "Please uninstall the current bash-completion and install bash-completion@2"
    return
  fi

  # If .bashrc does not contain the bash-completion configuration - add it
  if [[ -z "$(grep 'etc/profile.d/bash_completion.sh' ~/.bashrc)" ]]; then
    echo "  · add bash-completion configuration to .bashrc"
    echo "[[ -r \"$(brew --prefix)/etc/profile.d/bash_completion.sh\" ]] && . \"$(brew --prefix)/etc/profile.d/bash_completion.sh\"" >> ~/.bashrc
    echo "    ok"
  else
    echo "  · bash-completion configuration is already exists in .bashrc"
  fi

  # Install fzf if not exists
  if [[ -x "$(command -v fzf)" ]]; then
    echo "  · fzf is already installed"
  else
    echo "  · install fzf"
    brew install fzf
    echo "    ok"
  fi

  # Install prerequisites if not exists

  if [[ -x "$(command -v gawk)" && -x "$(command -v grep)" && -x "$(command -v gsed)" ]]; then
    echo "  · gawk, grep, gsed are already installed"
  else
    echo "  · install gawk, grep, gnu-sed"
    brew install gawk grep gnu-sed
    echo "    ok"
  fi

  if [[ -n $(brew list --formula | grep coreutils) ]]; then
    echo "  · coreutils is already installed"
  else
    echo "  · install coreutils"
    brew install coreutils
    echo "    ok"
  fi
fi

# Install fzf-tab-completion if not exists
if [[ -d ~/.fzf-tab-completion ]]; then
  echo "  · fzf-tab-completion is already installed"
else
  echo "  · install fzf-tab-completion"
  git clone git@github.com:lincheney/fzf-tab-completion.git ~/.fzf-tab-completion
  echo "    ok"
fi

# Add fzf complete configuration to ~/.bashrc if not exists
if [[ -z "$(grep 'source ~/.fzf-tab-completion/bash/fzf-bash-completion.sh' ~/.bashrc)" ]]; then
  echo "  · add fzf complete configuration to .bashrc"
  echo "source ~/.fzf-tab-completion/bash/fzf-bash-completion.sh" >> ~/.bashrc
  echo "    ok"
else
  echo "  · fzf complete configuration is already exists in .bashrc"
fi

# Add tab binding configuration to ~/.bashrc if not exists
if [[ -z "$(grep "fzf_bash_completion" ~/.bashrc)" ]]; then
  echo "  · add tab binding configuration to .bashrc"
  echo "bind -x '\"\\t\": fzf_bash_completion'" >> ~/.bashrc
  echo "    ok"
else
  echo "  · tab binding configuration is already exists in .bashrc"
fi

# Add command history search configuration to ~/.bashrc if not exists
if [[ -z "$(grep 'eval "$(fzf --bash)"' ~/.bashrc)" ]]; then
  echo "  · add command history search configuration to .bashrc"
  echo "eval \"\$(fzf --bash)\"" >> ~/.bashrc
  echo "    ok"
else
  echo "  · command history search configuration is already exists in .bashrc"
fi

# Add default fzf completion params to ~/.bashrc if not exists
# if [[ -z "$(grep 'FZF_DEFAULT_COMMAND' ~/.bashrc)" || -z "$(grep 'FZF_DEFAULT_OPTS' ~/.bashrc)" ]]; then
#   echo "  · add default fzf completion params to .bashrc"
#   [[ -z "$(grep 'FZF_DEFAULT_COMMAND' ~/.bashrc)" ]] && echo "export FZF_DEFAULT_COMMAND='history -n 1 | fzf'" >> ~/.bashrc && echo "    added FZF_DEFAULT_COMMAND"
#   [[ -z "$(grep 'FZF_DEFAULT_OPTS' ~/.bashrc)" ]] && echo "export FZF_DEFAULT_OPTS=\"--height 50% --layout=reverse --prompt='Command > '\"" >> ~/.bashrc && echo "    added FZF_DEFAULT_OPTS"
#   echo "    ok"
# else
#   echo "  · fzf default completion params is already exists in .bashrc"
# fi

echo "successfully installed"
