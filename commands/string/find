#!/usr/bin/env bash

COMMAND_DESCRIPTION="Find substring in a string with regular expressions"

COMMAND_HELP="\
Find substring in a string with regular expressions.
Usage:
    :string:find <pattern> <text....> 
Arguments:
    text:         The string to make replacements in.
    pattern:      The regular expression pattern to search for.
Options:
    --case-insensitive, -i: Make the search case-insensitive.
Example:
    :string:find '(hello|hi).*' hello, world!
    Output: 'hello'
"

_do_command() {
    if [ "$1" = "--help" ] || [ "$1" = "help" ]; then
        echo "$COMMAND_HELP"
        return
    fi

    local pattern="$1"
    shift
    local text=''
    local case_insensitive=false

    while [ $# -gt 0 ]; do
        case "$1" in
            --case-insensitive | -i)
                case_insensitive=true
                ;;
            *)
                [ -n "$text" ] && text="$text "
                text="$text$1"
                ;;
        esac
        shift
    done

    if [ -z "$pattern" ]; then
        echo "Pattern is not provided"
        return
    fi

    if [ -z "$text" ]; then
        echo "Text is not provided"
        return
    fi

    if [ "$case_insensitive" = true ]; then
        echo "$text" | grep -o -E "$pattern" | head -n 1
    else
        echo "$text" | grep -o -E "$pattern" | head -n 1
    fi
}

_do_command "$@"
